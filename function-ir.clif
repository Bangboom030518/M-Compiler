function u0:0() -> i8 system_v {
    ss0 = explicit_slot 4
    ss1 = explicit_slot 4
    ss2 = explicit_slot 4
    ss3 = explicit_slot 1
    sig0 = (i32, i32) -> i32 system_v
    sig1 = (i32) system_v
    fn0 = colocated u0:2 sig0
    fn1 = u0:0 sig1

block0:
    v0 = iconst.i32 10
    v13 = stack_addr.i64 ss0
    store notrap v0, v13  ; v0 = 10
    v1 = stack_addr.i64 ss0
    v2 = load.i32 v1
    v3 = iconst.i32 6
    v14 = stack_addr.i64 ss1
    store notrap v3, v14  ; v3 = 6
    v4 = stack_addr.i64 ss1
    v5 = load.i32 v4
    v6 = call fn0(v2, v5)
    v15 = stack_addr.i64 ss2
    store notrap v6, v15
    v7 = stack_addr.i64 ss2
    v8 = load.i32 v7
    call fn1(v8)
    v9 = iconst.i64 0
    v10 = iconst.i8 0
    v16 = stack_addr.i64 ss3
    store notrap v10, v16  ; v10 = 0
    v11 = stack_addr.i64 ss3
    v12 = load.i8 v11
    return v12
}
function u0:0(i32, i32) -> i32 system_v {
    ss0 = explicit_slot 4
    ss1 = explicit_slot 4
    ss2 = explicit_slot 4
    ss3 = explicit_slot 4
    ss4 = explicit_slot 4
    ss5 = explicit_slot 4
    ss6 = explicit_slot 4
    ss7 = explicit_slot 4
    sig0 = (i32) -> i32 system_v
    sig1 = (i32, i32) -> i32 system_v
    sig2 = (i32) -> i32 system_v
    sig3 = (i32) -> i32 system_v
    sig4 = (i32, i32) -> i32 system_v
    sig5 = (i32, i32) -> i32 system_v
    fn0 = colocated u0:4 sig0
    fn1 = colocated u0:6 sig1
    fn2 = colocated u0:4 sig2
    fn3 = colocated u0:4 sig3
    fn4 = colocated u0:5 sig4
    fn5 = colocated u0:3 sig5

block0(v0: i32, v1: i32):
    v26 = stack_addr.i64 ss0
    store notrap v0, v26
    v2 = stack_addr.i64 ss0
    v27 = stack_addr.i64 ss1
    store notrap v1, v27
    v3 = stack_addr.i64 ss1
    v4 = load.i32 v2
    v5 = call fn0(v4)
    v28 = stack_addr.i64 ss2
    store notrap v5, v28
    v6 = stack_addr.i64 ss2
    v7 = load.i32 v6
    v8 = load.i32 v2
    v9 = load.i32 v3
    v10 = call fn1(v8, v9)
    v29 = stack_addr.i64 ss3
    store notrap v10, v29
    v11 = stack_addr.i64 ss3
    v12 = load.i32 v11
    v13 = call fn2(v12)
    v30 = stack_addr.i64 ss4
    store notrap v13, v30
    v14 = stack_addr.i64 ss4
    v15 = load.i32 v14
    v16 = load.i32 v3
    v17 = call fn3(v16)
    v31 = stack_addr.i64 ss5
    store notrap v17, v31
    v18 = stack_addr.i64 ss5
    v19 = load.i32 v18
    v20 = call fn4(v15, v19)
    v32 = stack_addr.i64 ss6
    store notrap v20, v32
    v21 = stack_addr.i64 ss6
    v22 = load.i32 v21
    v23 = call fn5(v7, v22)
    v33 = stack_addr.i64 ss7
    store notrap v23, v33
    v24 = stack_addr.i64 ss7
    v25 = load.i32 v24
    return v25
}
function u0:0(i32) -> i32 system_v {
    ss0 = explicit_slot 4
    ss1 = explicit_slot 4
    ss2 = explicit_slot 1
    ss3 = explicit_slot 4
    ss4 = explicit_slot 4
    ss5 = explicit_slot 4
    ss6 = explicit_slot 4
    ss7 = explicit_slot 4
    sig0 = (i32, i32) -> i8 system_v
    sig1 = (i32, i32) -> i32 system_v
    sig2 = (i32) -> i32 system_v
    sig3 = (i32, i32) -> i32 system_v
    fn0 = colocated u0:7 sig0
    fn1 = colocated u0:6 sig1
    fn2 = colocated u0:4 sig2
    fn3 = colocated u0:5 sig3

block0(v0: i32):
    v26 = stack_addr.i64 ss0
    store notrap v0, v26
    v1 = stack_addr.i64 ss0
    v3 = load.i32 v1
    v4 = iconst.i32 1
    v27 = stack_addr.i64 ss1
    store notrap v4, v27  ; v4 = 1
    v5 = stack_addr.i64 ss1
    v6 = load.i32 v5
    v7 = call fn0(v3, v6)
    v28 = stack_addr.i64 ss2
    store notrap v7, v28
    v8 = stack_addr.i64 ss2
    v9 = load.i8 v8
    brif v9, block1, block2

block1:
    v10 = iconst.i32 1
    v29 = stack_addr.i64 ss3
    store notrap v10, v29  ; v10 = 1
    v11 = stack_addr.i64 ss3
    jump block3(v11)

block2:
    v12 = load.i32 v1
    v13 = load.i32 v1
    v14 = iconst.i32 1
    v30 = stack_addr.i64 ss4
    store notrap v14, v30  ; v14 = 1
    v15 = stack_addr.i64 ss4
    v16 = load.i32 v15
    v17 = call fn1(v13, v16)
    v31 = stack_addr.i64 ss5
    store notrap v17, v31
    v18 = stack_addr.i64 ss5
    v19 = load.i32 v18
    v20 = call fn2(v19)
    v32 = stack_addr.i64 ss6
    store notrap v20, v32
    v21 = stack_addr.i64 ss6
    v22 = load.i32 v21
    v23 = call fn3(v12, v22)
    v33 = stack_addr.i64 ss7
    store notrap v23, v33
    v24 = stack_addr.i64 ss7
    jump block3(v24)

block3(v2: i64):
    v25 = load.i32 v2
    return v25
}
function u0:0(i32, i32) -> i32 system_v {
    ss0 = explicit_slot 4
    ss1 = explicit_slot 4
    ss2 = explicit_slot 4

block0(v0: i32, v1: i32):
    v9 = stack_addr.i64 ss0
    store notrap v0, v9
    v2 = stack_addr.i64 ss0
    v10 = stack_addr.i64 ss1
    store notrap v1, v10
    v3 = stack_addr.i64 ss1
    v4 = load.i32 v2
    v5 = load.i32 v3
    v6 = isub v4, v5
    v11 = stack_addr.i64 ss2
    store notrap v6, v11
    v7 = stack_addr.i64 ss2
    v8 = load.i32 v7
    return v8
}
function u0:0(i32, i32) -> i32 system_v {
    ss0 = explicit_slot 4
    ss1 = explicit_slot 4
    ss2 = explicit_slot 4

block0(v0: i32, v1: i32):
    v9 = stack_addr.i64 ss0
    store notrap v0, v9
    v2 = stack_addr.i64 ss0
    v10 = stack_addr.i64 ss1
    store notrap v1, v10
    v3 = stack_addr.i64 ss1
    v4 = load.i32 v2
    v5 = load.i32 v3
    v6 = imul v4, v5
    v11 = stack_addr.i64 ss2
    store notrap v6, v11
    v7 = stack_addr.i64 ss2
    v8 = load.i32 v7
    return v8
}
function u0:0(i32, i32) -> i8 system_v {
    ss0 = explicit_slot 4
    ss1 = explicit_slot 4
    ss2 = explicit_slot 1

block0(v0: i32, v1: i32):
    v9 = stack_addr.i64 ss0
    store notrap v0, v9
    v2 = stack_addr.i64 ss0
    v10 = stack_addr.i64 ss1
    store notrap v1, v10
    v3 = stack_addr.i64 ss1
    v4 = load.i32 v2
    v5 = load.i32 v3
    v6 = icmp ule v4, v5
    v11 = stack_addr.i64 ss2
    store notrap v6, v11
    v7 = stack_addr.i64 ss2
    v8 = load.i8 v7
    return v8
}
function u0:0(i32, i32) -> i32 system_v {
    ss0 = explicit_slot 4
    ss1 = explicit_slot 4
    ss2 = explicit_slot 4

block0(v0: i32, v1: i32):
    v9 = stack_addr.i64 ss0
    store notrap v0, v9
    v2 = stack_addr.i64 ss0
    v10 = stack_addr.i64 ss1
    store notrap v1, v10
    v3 = stack_addr.i64 ss1
    v4 = load.i32 v2
    v5 = load.i32 v3
    v6 = sdiv v4, v5
    v11 = stack_addr.i64 ss2
    store notrap v6, v11
    v7 = stack_addr.i64 ss2
    v8 = load.i32 v7
    return v8
}
