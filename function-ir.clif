function u0:0(i64) -> i64 windows_fastcall {
    sig0 = (i64, i64) -> i8 windows_fastcall
    sig1 = (i64, i64) -> i64 windows_fastcall
    sig2 = (i64) -> i64 windows_fastcall
    sig3 = (i64, i64) -> i64 windows_fastcall
    sig4 = (i64) -> i64 windows_fastcall
    sig5 = (i64, i64) -> i64 windows_fastcall
    fn0 = colocated u0:2 sig0
    fn1 = colocated u0:4 sig1
    fn2 = colocated u0:1 sig2
    fn3 = colocated u0:4 sig3
    fn4 = colocated u0:1 sig4
    fn5 = colocated u0:3 sig5

block0(v0: i64):
    v1 = iconst.i64 2
    v2 = call fn0(v0, v1)  ; v1 = 2
    brif v2, block1, block2

block1:
    jump block3(v0)

block2:
    v4 = iconst.i64 1
    v5 = call fn1(v0, v4)  ; v4 = 1
    v6 = call fn2(v5)
    v7 = iconst.i64 2
    v8 = call fn3(v0, v7)  ; v7 = 2
    v9 = call fn4(v8)
    v10 = call fn5(v6, v9)
    jump block3(v10)

block3(v3: i64):
    return v3
}
function u0:0(i64, i64) -> i64 windows_fastcall {
block0(v0: i64, v1: i64):
    v2 = iadd v0, v1
    return v2
}
function u0:0(i64, i64) -> i8 windows_fastcall {
block0(v0: i64, v1: i64):
    v2 = icmp ult v0, v1
    return v2
}
function u0:0(i64, i64) -> i64 windows_fastcall {
block0(v0: i64, v1: i64):
    v2 = isub v0, v1
    return v2
}
